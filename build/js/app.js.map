{"version":3,"sources":["app.js"],"names":["document","addEventListener","iniciarApp","createApp","Vue","navegacionFija","scrollNav","validateForms","startListeningIntersections","handleIntersect","entries","observer","forEach","entry","isIntersecting","target","classList","add","unobserve","elements","querySelectorAll","IntersectionObserver","threshold","element","observe","forms","Array","from","form","event","checkValidity","preventDefault","stopPropagation","navbar","querySelector","desde","body","window","getBoundingClientRect","top","remove","enlace","e","attributes","href","value","scrollIntoView","behavior","data","url","animales","imagenes","consejos","methods","[object Object]","res","fetch","json","this","fetchData","mount"],"mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC5CC,gBAGF,MAAMC,UAAEA,WAAcC,IA2BtB,SAASF,aACPG,iBACAC,YACAC,gBACAC,8BAIF,SAASC,gBAAgBC,EAASC,GAChCD,EAAQE,SAAQ,SAAUC,GACpBA,EAAMC,iBACRD,EAAME,OAAOC,UAAUC,IAAI,QAC3BN,EAASO,UAAUL,EAAME,YAM/B,SAASP,8BACP,IAAIW,EAAWnB,SAASoB,iBAAiB,YACrCT,EAAW,IAAIU,qBAAqBZ,gBAAiB,CAAEa,UAAW,KAEtEH,EAASP,SAAQ,SAAUW,GACzBZ,EAASa,QAAQD,MAIrB,SAAShB,gBAEP,MAAMkB,EAAQzB,SAASoB,iBAAiB,qBAGxCM,MAAMC,KAAKF,GAAOb,QAASgB,IACzBA,EAAK3B,iBACH,SACC4B,IACMD,EAAKE,kBACRD,EAAME,iBACNF,EAAMG,mBAGRJ,EAAKZ,UAAUC,IAAI,mBAErB,KAMN,SAASZ,iBACP,MAAM4B,EAASjC,SAASkC,cAAc,uBAChCC,EAAQnC,SAASkC,cAAc,mBAC/BE,EAAOpC,SAASkC,cAAc,QACpCG,OAAOpC,iBAAiB,UAAU,WAC5BkC,EAAMG,wBAAwBC,IAAM,IAEtCN,EAAOjB,UAAUC,IAAI,SAErBgB,EAAOjB,UAAUwB,OAAO,QACxBJ,EAAKpB,UAAUwB,OAAO,qBAM5B,SAASlC,YACSN,SAASoB,iBAAiB,aAClCR,QAAS6B,IACfA,EAAOxC,iBAAiB,SAAS,SAAUyC,GACzCA,EAAEX,iBACc/B,SAASkC,cAAcQ,EAAE3B,OAAO4B,WAAWC,KAAKC,OACxDC,eAAe,CACrBC,SAAU,gBAhGlB5C,UAAU,CACR6C,KAAI,KACK,CACLC,IAAK,cACLC,SAAU,GACVC,SAAU,GACVC,SAAU,KAGdC,QAAS,CACPC,gBAAgBL,GACd,MAAMM,QAAYC,MAAMP,GAClBD,QAAaO,EAAIE,OACvBC,KAAKR,SAAWF,EAAKE,SACrBQ,KAAKP,SAAWH,EAAKG,SACrBO,KAAKN,SAAWJ,EAAKI,WAGzBE,sBACQI,KAAKC,UAAUD,KAAKT,QAE3BW,MAAM","file":"app.js","sourcesContent":["// Funcion lanzada al cargar todo lo necesario\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  iniciarApp();\r\n});\r\n\r\nconst { createApp } = Vue;\r\n\r\n// VUE\r\ncreateApp({\r\n  data() {\r\n    return {\r\n      url: \"/datos.json\",\r\n      animales: [],\r\n      imagenes: [],\r\n      consejos: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchData(url) {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      this.animales = data.animales;\r\n      this.imagenes = data.imagenes;\r\n      this.consejos = data.consejos;\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchData(this.url);\r\n  },\r\n}).mount(\"#app\");\r\n\r\n// Funcion lanzada al inicializar la aplicacion\r\nfunction iniciarApp() {\r\n  navegacionFija();\r\n  scrollNav();\r\n  validateForms();\r\n  startListeningIntersections();\r\n}\r\n\r\n// Funcion para ver cuando un elemento entra en pantalla\r\nfunction handleIntersect(entries, observer) {\r\n  entries.forEach(function (entry) {\r\n    if (entry.isIntersecting) {\r\n      entry.target.classList.add(\"show\");\r\n      observer.unobserve(entry.target);\r\n    }\r\n  });\r\n}\r\n\r\n// Funcion que empieza las escuchas de los elementos con la clase .animate\r\nfunction startListeningIntersections() {\r\n  var elements = document.querySelectorAll(\".animate\");\r\n  var observer = new IntersectionObserver(handleIntersect, { threshold: 0.5 });\r\n\r\n  elements.forEach(function (element) {\r\n    observer.observe(element);\r\n  });\r\n}\r\n\r\nfunction validateForms() {\r\n  // Fetch all the forms we want to apply custom Bootstrap validation styles to\r\n  const forms = document.querySelectorAll(\".needs-validation\");\r\n\r\n  // Loop over them and prevent submission\r\n  Array.from(forms).forEach((form) => {\r\n    form.addEventListener(\r\n      \"submit\",\r\n      (event) => {\r\n        if (!form.checkValidity()) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        form.classList.add(\"was-validated\");\r\n      },\r\n      false\r\n    );\r\n  });\r\n}\r\n\r\n// Funcion que fija el navbar despues de un punto\r\nfunction navegacionFija() {\r\n  const navbar = document.querySelector(\".header--background\");\r\n  const desde = document.querySelector(\".sobre-festival\");\r\n  const body = document.querySelector(\"body\");\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (desde.getBoundingClientRect().top < 100) {\r\n      // Ya pasamos el elemento\r\n      navbar.classList.add(\"fijo\");\r\n    } else {\r\n      navbar.classList.remove(\"fijo\");\r\n      body.classList.remove(\"navbar-scroll\");\r\n    }\r\n  });\r\n}\r\n\r\n// Funcion para que al presionar los enlaces de navegacion se haga un efecto smooth para dirigirse a ellos\r\nfunction scrollNav() {\r\n  const enlaces = document.querySelectorAll(\".navbar a\");\r\n  enlaces.forEach((enlace) => {\r\n    enlace.addEventListener(\"click\", function (e) {\r\n      e.preventDefault();\r\n      const seccion = document.querySelector(e.target.attributes.href.value);\r\n      seccion.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    });\r\n  });\r\n}\r\n"]}